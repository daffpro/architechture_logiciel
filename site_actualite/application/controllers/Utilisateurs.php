<?php 
/*
 Generated by Manuigniter v2.0 
 www.manuigniter.com
*/
class Utilisateurs extends CI_Controller{
 function __construct()
 {
       parent::__construct();
      $this->load->model('Utilisateurs_model');
 } 
 /*
* Listing of utilisateurs
 */
public function index()
{
  try{
      $data['noof_page'] = 0;
     $data['utilisateurs'] = $this->Utilisateurs_model->get_all_with_asso_utilisateurs();
      $data['_view'] = 'utilisateurs/index';
      $this->load->view('layouts/main',$data);
    } catch (Exception $ex) {
      throw new Exception('Utilisateurs Controller : Error in index function - ' . $ex);
  }  
}
 /*
  * Adding a new utilisateurs
  */
 function add()
 {  
try{
      $params = array(
       'nom_utilisateur'=> $this->input->post('nom_utilisateur'),
       'password'=> $this->input->post('password'),
       'nom'=> $this->input->post('nom'),
       'prenom'=> $this->input->post('prenom'),
       'id_profil'=> $this->input->post('id_profil'),
       'created_at'=>'',
          'updated_at'=>DATE,
       'deleted_at'=>'',
        );
       $this->load->library('upload');
       $this->load->library('form_validation');
       $this->form_validation->set_rules('nom_utilisateur','Nom utilisateur','required');
       $this->form_validation->set_rules('password','Password','required');
       $this->form_validation->set_rules('nom','Nom','required');
       $this->form_validation->set_rules('prenom','Prenom','required');
       $this->form_validation->set_rules('id_profil','Id profil','required');
        if($this->form_validation->run())  
        {  
            $id_utilisateur= $this->Utilisateurs_model->add_utilisateurs($params);
             $this->session->set_flashdata('alert_msg','<div class="alert alert-success text-center">Succesfully added.</div>');
              redirect('utilisateurs/index');
        }
        else
        { 
         $this->load->model('Profil_model');
         $data['all_profil'] = $this->Profil_model->get_all_profil(); 
           $data['_view'] = 'utilisateurs/add';
            $this->load->view('layouts/main',$data);
        }
  } catch (Exception $ex) {
    throw new Exception('Utilisateurs Controller : Error in add function - ' . $ex);
  }  
 }  
  /*
  * Editing a utilisateurs
 */
 public function edit($id_utilisateur)
 {   
  try{
   $data['utilisateurs'] = $this->Utilisateurs_model->get_utilisateurs($id_utilisateur);
       $this->load->library('upload');
       $this->load->library('form_validation');
     if(isset($data['utilisateurs']['id_utilisateur']))
      {
        $params = array(
           'nom_utilisateur'=> $this->input->post('nom_utilisateur'),
           'password'=> $this->input->post('password'),
           'nom'=> $this->input->post('nom'),
           'prenom'=> $this->input->post('prenom'),
           'id_profil'=> $this->input->post('id_profil'),
            'created_at'=>'',
       'updated_at'=>DATE,
            'deleted_at'=>'',
        );
               $this->form_validation->set_rules('nom_utilisateur','nom_utilisateur','required');
               $this->form_validation->set_rules('password','password','required');
               $this->form_validation->set_rules('nom','nom','required');
               $this->form_validation->set_rules('prenom','prenom','required');
               $this->form_validation->set_rules('id_profil','id_profil','required');
         if($this->form_validation->run())  
           {  
           $this->Utilisateurs_model->update_utilisateurs($id_utilisateur,$params);
             $this->session->set_flashdata('alert_msg','<div class="alert alert-success text-center">Succesfully updated.</div>');
                redirect('utilisateurs/index');
           }
           else
          {
             $this->load->model('Profil_model');
             $data['all_profil'] = $this->Profil_model->get_all_profil(); 
              $data['_view'] = 'utilisateurs/edit';
              $this->load->view('layouts/main',$data);
          }
  }
  else
  show_error('The utilisateurs you are trying to edit does not exist.');
  } catch (Exception $ex) {
    throw new Exception('Utilisateurs Controller : Error in edit function - ' . $ex);
  }  
} 
/*
  * Deleting utilisateurs
  */
  function remove($id_utilisateur)
   {
    try{
      $utilisateurs = $this->Utilisateurs_model->get_utilisateurs($id_utilisateur);
  // check if the utilisateurs exists before trying to delete it
       if(isset($utilisateurs['id_utilisateur']))
       {
         $this->Utilisateurs_model->delete_utilisateurs($id_utilisateur);
             $this->session->set_flashdata('alert_msg','<div class="alert alert-success text-center">Succesfully Removed.</div>');
           redirect('utilisateurs/index');
       }
       else
       show_error('The utilisateurs you are trying to delete does not exist.');
  } catch (Exception $ex) {
    throw new Exception('Utilisateurs Controller : Error in remove function - ' . $ex);
  }  
  }
  /*
  * View more a utilisateurs
 */
 public function view_more($id_utilisateur)
 {   
try{
   $data['utilisateurs'] = $this->Utilisateurs_model->get_utilisateurs($id_utilisateur);
     if(isset($data['utilisateurs']['id_utilisateur']))
      {
              $data['_view'] = 'utilisateurs/view_more';
              $this->load->view('layouts/main',$data);
      }
      else
        show_error('The utilisateurs you are trying to view more does not exist.');
    } catch (Exception $ex) {
    throw new Exception('Utilisateurs Controller : Error in View more function - ' . $ex);
  }  
} 
 /*
* Listing of utilisateurs
 */
public function search_by_clm()
{
    $column_name= $this->input->post('column_name');
    $value_id= $this->input->post('value_id');
     $data['noof_page'] = 0;
     $params = array();
    $data['utilisateurs'] = $this->Utilisateurs_model->get_all_with_asso_utilisateurs_by_cat($column_name,$value_id);
      $data['_view'] = 'utilisateurs/index';
      $this->load->view('layouts/main',$data);
}
  /*
  * get get_search_values_byclms by id
 */
 public function get_search_values_by_id_profil()
 {   
     $id_profil= $this->input->post('value');
        $this->load->model('Profil_model');
        $data['all_profil'] = $this->Profil_model->get_all_profil(); 
      $utilisateurs = $this->Utilisateurs_model->get_all_with_asso_utilisateurs();
if(isset($data['all_profil']) && $data['all_profil']!=null)
                                              {
                                              foreach($data['all_profil'] as $u){ 
      echo          "<option value='".$u['id_profil']."'> ".$u['id_profil']."</option>"; 
 } 
                                              }
                                              else{
                                                        echo '<tr>No data found</tr>';
                                              }
 } 
 /*
* get search values by column- utilisateurs
 */
public function get_search_values_by_clm()
{
    $clm_name= $this->input->post('clm_name');
    $value= $this->input->post('value');
    $id= $this->input->post('id');
        $params = array(
        $clm_name=>$value,
        );
           $this->Utilisateurs_model->update_utilisateurs($id,$params);
   $data['noof_page'] = 0;
  $data['utilisateurs'] = $this->Utilisateurs_model->get_all_with_asso_utilisateurs();
  $this->load->view('utilisateurs/index',$data);
}
 }
