<?php 
/*
 Generated by Manuigniter v2.0 
 www.manuigniter.com
*/
class Posts extends CI_Controller{
 function __construct()
 {
       parent::__construct();
      $this->load->model('Posts_model');
      $this->load->helper(array('form', 'url'));
 } 
 /*
* Listing of posts
 */
public function index()
{
  try{
      $data['noof_page'] = 0;
     $data['posts'] = $this->Posts_model->get_all_with_asso_posts();
      $data['_view'] = 'posts/index';
      $this->load->view('layouts/main',$data);
    } catch (Exception $ex) {
      throw new Exception('Posts Controller : Error in index function - ' . $ex);
  }  
}
 /*
  * Adding a new posts
  */
 function add()
 {  
      try{
          
          $this->load->library('upload');
          $this->load->library('form_validation');
          if(isset($_POST) && count($_POST) > 0)     
            {  $config = array(
              'upload_path' => FCPATH."uploads",
              'allowed_types' => "gif|jpg|png|jpeg|pdf",
              'overwrite' => TRUE,
              'max_size' => "204800000", // Can be set to particular file size , here it is 2 MB(2048 Kb)
              'max_height' => "76800",
              'max_width' => "102400"
              );
              // var_dump($config);
              $this->upload->initialize($config);
              $field ='myFile'; // The name attribute of the file input control.
              $file_selected = isset($_FILES[$field]) && isset($_FILES[$field]['name']) && $_FILES[$field]['name'] != '';
              // var_dump($_FILES);
              if($this->upload->do_upload($field))
              {
                $data = array('upload_data' => $this->upload->data());
                // var_dump($data);exit;
                  $params = array(
                        'id_categorie'=> $this->input->post('id_categorie'),
                        'id_utilisateur'=> $_SESSION['id_utilisateur'],
                        'titre_article'=> $this->input->post('titre_article'),
                        'description_article'=> $this->input->post('description_article'),
                        'corps_article'=> $this->input->post('corps_article'),
                        'statut'=> $this->input->post('statut'),
                        'image'=>$data["upload_data"]["file_name"],
                  );
                 
                //  var_dump($params);exit;
                  $id_article= $this->Posts_model->add_posts($params);
                  $this->session->set_flashdata('alert_msg','<div class="alert alert-success text-center">Succesfully added.</div>');
                  redirect('posts/index');
              }
              else
              {
              $error = array('error' => $this->upload->display_errors());
              // $this->load->view('file_view', $error);
              
                       var_dump($error);
                    
                }
                
            }
            else
            { 
            $this->load->model('Categorie_model');
            $data['all_categorie'] = $this->Categorie_model->get_all_categorie(); 
            $this->load->model('Utilisateurs_model');
            $data['all_utilisateurs'] = $this->Utilisateurs_model->get_all_utilisateurs(); 
              $data['_view'] = 'posts/add';
                $this->load->view('layouts/main',$data);
            }
      } catch (Exception $ex) {
        throw new Exception('Posts Controller : Error in add function - ' . $ex);
      }  
 }  
  /*
  * Editing a posts
 */
 public function edit($id_article)
 {   
  try{
   $data['posts'] = $this->Posts_model->get_posts($id_article);
       $this->load->library('upload');
       $this->load->library('form_validation');
     if(isset($data['posts']['id_article']))
      {
        $params = array(
           'id_categorie'=> $this->input->post('id_categorie'),
           'id_utilisateur'=> $_SESSION['id_utilisateur'],
           'titre_article'=> $this->input->post('titre_article'),
           'description_article'=> $this->input->post('description_article'),
           'corps_article'=> $this->input->post('corps_article'),
           'statut'=> $this->input->post('statut'),
            'created_at'=>'',
       'updated_at'=>DATE,
            'deleted_at'=>'',
        );
          if(isset($_POST) && count($_POST) > 0)     
           {  
           $this->Posts_model->update_posts($id_article,$params);
             $this->session->set_flashdata('alert_msg','<div class="alert alert-success text-center">Succesfully updated.</div>');
                redirect('posts/index');
           }
           else
          {
             $this->load->model('Categorie_model');
             $data['all_categorie'] = $this->Categorie_model->get_all_categorie(); 
             $this->load->model('Utilisateurs_model');
             $data['all_utilisateurs'] = $this->Utilisateurs_model->get_all_utilisateurs(); 
              $data['_view'] = 'posts/edit';
              $this->load->view('layouts/main',$data);
          }
  }
  else
  show_error('The posts you are trying to edit does not exist.');
  } catch (Exception $ex) {
    throw new Exception('Posts Controller : Error in edit function - ' . $ex);
  }  
 } 
/*
  * Deleting posts
  */
  function remove($id_article)
   {
    try{
      $posts = $this->Posts_model->get_posts($id_article);
  // check if the posts exists before trying to delete it
       if(isset($posts['id_article']))
       {
         $this->Posts_model->delete_posts($id_article);
             $this->session->set_flashdata('alert_msg','<div class="alert alert-success text-center">Succesfully Removed.</div>');
           redirect('posts/index');
       }
       else
       show_error('The posts you are trying to delete does not exist.');
  } catch (Exception $ex) {
    throw new Exception('Posts Controller : Error in remove function - ' . $ex);
  }  
  }
  /*
  * View more a posts
 */
 public function view_more($id_article)
 {   
try{
   $data['posts'] = $this->Posts_model->get_posts($id_article);
     if(isset($data['posts']['id_article']))
      {
              $data['_view'] = 'posts/view_more';
              $this->load->view('layouts/main',$data);
      }
      else
        show_error('The posts you are trying to view more does not exist.');
    } catch (Exception $ex) {
    throw new Exception('Posts Controller : Error in View more function - ' . $ex);
  }  
} 
 /*
* Listing of posts
 */
public function search_by_clm()
{
    $column_name= $this->input->post('column_name');
    $value_id= $this->input->post('value_id');
     $data['noof_page'] = 0;
     $params = array();
    $data['posts'] = $this->Posts_model->get_all_with_asso_posts_by_cat($column_name,$value_id);
      $data['_view'] = 'posts/index';
      $this->load->view('layouts/main',$data);
}
  /*
  * get get_search_values_byclms by id
 */
 public function get_search_values_by_id_categorie()
 {   
     $id_categorie= $this->input->post('value');
        $this->load->model('Categorie_model');
        $data['all_categorie'] = $this->Categorie_model->get_all_categorie(); 
      $posts = $this->Posts_model->get_all_with_asso_posts();
if(isset($data['all_categorie']) && $data['all_categorie']!=null)
                                              {
                                              foreach($data['all_categorie'] as $p){ 
      echo          "<option value='".$p['id_categorie']."'> ".$p['id_categorie']."</option>"; 
 } 
                                              }
                                              else{
                                                        echo '<tr>No data found</tr>';
                                              }
 } 
  /*
  * get get_search_values_byclms by id
 */
 public function get_search_values_by_id_utilisateur()
 {   
     $id_utilisateur= $this->input->post('value');
        $this->load->model('Utilisateurs_model');
        $data['all_utilisateurs'] = $this->Utilisateurs_model->get_all_utilisateurs(); 
      $posts = $this->Posts_model->get_all_with_asso_posts();
if(isset($data['all_utilisateurs']) && $data['all_utilisateurs']!=null)
                                              {
                                              foreach($data['all_utilisateurs'] as $p){ 
      echo          "<option value='".$p['id_utilisateur']."'> ".$p['id_utilisateur']."</option>"; 
 } 
                                              }
                                              else{
                                                        echo '<tr>No data found</tr>';
                                              }
 } 
 /*
* get search values by column- posts
 */
public function get_search_values_by_clm()
{
    $clm_name= $this->input->post('clm_name');
    $value= $this->input->post('value');
    $id= $this->input->post('id');
        $params = array(
        $clm_name=>$value,
        );
           $this->Posts_model->update_posts($id,$params);
   $data['noof_page'] = 0;
  $data['posts'] = $this->Posts_model->get_all_with_asso_posts();
  $this->load->view('posts/index',$data);
}
 }
